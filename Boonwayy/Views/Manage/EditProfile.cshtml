@model Boonwayy.Models.UserProfile

@{
    ViewBag.Title = "Edit Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.Partial("UserDashboardMenu")

<div class="container">



    <h2>Edit Profile</h2>

    @using (Html.BeginForm("EditProfile", "Manage", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @if (ViewBag.Message != null)
            {
                <h2 class="text text-success">@ViewBag.Message <a href="@Url.Action("UserProfile", "Manage")" class="btn btn-default">Back to Profile</a></h2>
            }

            @if (ViewBag.UploadError != null)
            {
                <h2 class="text text-danger">@ViewBag.UploadError</h2>

            }

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.ProfilePictureUrl)

            <div class="form-group">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SocialSecurityNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SocialSecurityNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SocialSecurityNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.ProfilePictureUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProfilePictureUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProfilePictureUrl, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                <label for="ProfileImageFile" class="control-label col-md-2">Profile Picture</label>
                <div class="col-md-10">
                    <div class="input-group">
                        <span class="input-group-addon">JPG, PNG, BMP</span>
                        <input type="file" id="ProfileImageFile" name="ProfileImageFile" class="form-control" onchange="fileUploadValidation('ProfileImageFile');" />
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Profession, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Profession, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Profession, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @*@Html.LabelFor(model => model.ApplicationUserId, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.ApplicationUserId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ApplicationUserId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">

                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to Profile", "UserProfile")
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script type="text/javascript">
    function fileUploadValidation(elementId) {
        var myElementById = document.getElementById(elementId);
        var size = parseFloat(myElementById.files[0].size / 1024).toFixed(2);
        if (typeof (myElementById.files) != "undefined") {

            if (size > 10000) {
                alert("Upload Limit Exceeded, 10MB is maximum file size.");

                var elementInput = $("#" + elementId);
                elementInput.replaceWith(elementInput.val('').clone(true));
            }
            else {
                return true;
            }

        } else {
            alert("This browser does not support HTML5.");
        }
    }

</script>